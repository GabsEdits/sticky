@import 'colors.styl';
@import 'notes.styl';
@import 'util.styl';

// most hacky thing ever
// basically this defines link_color_yellow, link_color_pink, etc
for color, variables in colors {
  c = unquote(d + 'hello' (variables.link));
  d = join('_', 'link_color', color);
  e = join(
    ' ',
    d,
    variables.link
  );
  @define-color {e};
}

.text-view {
  background-color: transparent;
  color: inherit;
}

toolbarview.note-window {
  .text-view, .bottom-bar, popover > arrow, popover > contents, .top-bar {
    transition: background-color 0.35s, unquote("color") 0.25s;
  }

  &:not(:focus-within) {
    // hover styles
    & > .top-bar, & > .bottom-bar {
      transition: 0.25s opacity ease-out;
      opacity: 0;

      &:hover {
        opacity: 1;
        transition: 0.25s opacity ease-in;
      }
    }
  }

  & > .top-bar, & > .bottom-bar {
    &:backdrop > windowhandle {
      filter: opacity(1);
    }
  }

  for name, info in colors {
    &.style-{name} {
      .text-view, .bottom-bar, popover > arrow, popover > contents {
        color: info.fg;
        background-color: info.bg;
      }

      .top-bar {
        color: info.fg;
        background-color: info.header;
      }
    }
  }
}